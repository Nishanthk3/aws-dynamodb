version: "3.8"
services:
  dynamodb:
    image: amazon/dynamodb-local
    hostname: dynamodblocal
    container_name: p-dynamodb-local
    working_dir: /home/dynamodblocal
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /data"
    volumes: 
      - ./dynamodb-data:/data
    ports:
      - 9094:8000

  redis:
    image: redis:latest
    container_name: p-redis
    volumes:
      - ./redis_volume_data:/data
    ports:
      - 6379:6379

  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: p-redis_insight
    volumes:
      - ./redis_insight_volume_data:/data
    ports:
      - 7001:8001

## UI for Dynamo DB
  dynamodb_admin:
    image: aaronshaf/dynamodb-admin
    container_name: p-app-dynamodb_admin
    # working_dir: /home/dynamodblocal
    ports:
      - "7000:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
    depends_on:
      - dynamodb

## will create test tables
  dynamodb_migrator:
    image: banst/awscli
    container_name: p-app-dynamodb_migrator
    working_dir: /home/dynamodblocal
    command: dynamodb create-table --cli-input-json file://mytable.json --endpoint-url http://dynamodb:8000
    volumes:
      - ./schema:/home/dynamodblocal
    environment:
      - AWS_ACCESS_KEY_ID=DUMMYIDEXAMPLE
      - AWS_SECRET_ACCESS_KEY=DUMMYEXAMPLEKEY
      - AWS_DEFAULT_REGION=us-east-1
    depends_on:
      - dynamodb

## will seed data into test tables
  dynamodb_seeder:
    image: banst/awscli 
    container_name: p-app-dynamodb_seeder
    working_dir: /home/dynamodblocal
    command: dynamodb batch-write-item --request-items file://mytable_seeder.json --endpoint-url http://dynamodb:8000
    volumes:
      - ./schema:/home/dynamodblocal
    environment:
      - AWS_ACCESS_KEY_ID=DUMMYIDEXAMPLE
      - AWS_SECRET_ACCESS_KEY=DUMMYEXAMPLEKEY
      - AWS_DEFAULT_REGION=us-east-1
    depends_on:
      - dynamodb_migrator
      - dynamodb
    restart: on-failure
